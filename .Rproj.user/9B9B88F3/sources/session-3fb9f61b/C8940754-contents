# 

Add topic background and references, overview of goals, description of the datasets used

First, let's import the necessary libraries

```{r, message=FALSE}
# load necessary libraries
library(sf)
library(terra)
library(here)
library(dplyr)
library(rpart)
library(rpart.plot)
library(tmap)

# clearing the environment for a fresh start
rm(list = ls())

```

### Data Processing and Preparation

This section involves preparing the Landsat data and study area for analysis.

First, let's create a raster stack using the 6 bands we will be working with in this analysis, update the layer names, and plot a true color image to visualize the data.

```{r}
# list the files for eahc band
filelist <- list.files(here("data/landsat-data"), full.names = TRUE)

# read in and store raster stack
landsat_20070925 <- rast(filelist)

# update layer names to match the bands 
names(landsat_20070925) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")

# plot true color image
plotRGB(landsat_20070925, r = 3, g = 2, b = 1, stretch = "lin")

```

Looks good! This shows a view of the Santa Barbara region we will be analyzing.

We want to constrain the analysis to the southern part of Santa Barbara county since this is where the training data comes from, so let's proceed by reading in this data.

```{r}
# read in shapefile of southern SB county
study_area <- st_read(here("data/SB_county_south.shp"))

# reproject to match CRS of the Landsat data
study_area <- st_transform(study_area, crs = crs(landsat_20070925))
```

Nice. Now, cropping the Landsat data to the study area will create for a more concise visualization and also saves computational capacity. ADD SOMETHING ABOUT MASKING

```{r}
# crop Landsat to the extent of SB county
landsat_cropped <- crop(landsat_20070925, study_area)

# mask the raster 
landsat_masked <- mask(landsat_cropped, study_area)

# clean up environment by removing unecessary object
rm(landsat_20070925, study_area, landsat_cropped)
```
